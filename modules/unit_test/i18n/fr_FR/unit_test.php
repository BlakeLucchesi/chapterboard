<?php defined('SYSPATH') OR die('No direct access allowed.');

$lang = array
(
	'invalid_test_path'    => 'Impossible d\'ouvrir le répertoire de test : %s.',
	'duplicate_test_class' => 'Nom de classe de test dupliqué %s dans %s.',
	'test_class_not_found' => 'Aucune classe de test nommée %s trouvée dans %s.',
	'test_class_extends'   => '%s doit être une extension de Unit_Test_Case.',
	'no_tests_found'       => 'Aucun test trouvé',
	'score'                => 'Score',
	'total'                => 'Total',
	'passed'               => 'Passé',
	'failed'               => 'Echoué',
	'error'                => 'Erreur',
	'errors'               => 'Erreurs',
	'line'                 => 'ligne',
	'assert_true'          => 'assert_true: Attendait true, mais obtenu (%s) %s.',
	'assert_true_strict'   => 'assert_true_strict: Attendait (boolean), mais obtenu (%s) %s.',
	'assert_false'         => 'assert_false: Attendait false, mais obtenu (%s) %s.',
	'assert_false_strict'  => 'assert_false_strict: Attendait (boolean) false, mais obtenu (%s) %s.',
	'assert_equal'         => 'assert_equal: Attendait (%s) %s, mais obtenu (%s) %s.',
	'assert_not_equal'     => 'assert_not_equal: N\'attendait pas (%s) %s, mais obtenu (%s) %s.',
	'assert_same'          => 'assert_same: Attendait (%s) %s, mais obtenu (%s) %s.',
	'assert_not_same'      => 'assert_not_same: N\'attendait pas (%s) %s, mais obtenu (%s) %s.',
	'assert_boolean'       => 'assert_boolean: Attendait un boolean, mais obtenu (%s) %s.',
	'assert_not_boolean'   => 'assert_not_boolean: N\'attendait pas un boolean, mais obtenu (%s) %s.',
	'assert_integer'       => 'assert_integer: Attendait un integer, mais obtenu (%s) %s.',
	'assert_not_integer'   => 'assert_not_integer: N\'attendait pas un integer, mais obtenu (%s) %s.',
	'assert_float'         => 'assert_float: Attendait un float, mais obtenu (%s) %s.',
	'assert_not_float'     => 'assert_not_float: N\'attendait pas un float, mais obtenu (%s) %s.',
	'assert_array'         => 'assert_array: Attendait un tableau, mais obtenu (%s) %s.',
	'assert_array_key'     => 'assert_array_key: Attendait une clé valide, mais obtenu (%s) %s.',
	'assert_in_array'      => 'assert_in_array: Attendait une valeur valide, mais obtenu (%s) %s.',	
	'assert_not_array'     => 'assert_not_array: N\'attendait pas un tableau, mais obtenu (%s) %s.',
	'assert_object'        => 'assert_object: Attendait un objet, mais obtenu (%s) %s.',
	'assert_not_object'    => 'assert_not_object: N\'attendait pas un object, mais obtenu (%s) %s.',
	'assert_null'          => 'assert_null: Attendait null, mais obtenu (%s) %s.',
	'assert_not_null'      => 'assert_not_null: Attendait une valeur différente de null, mais obtenu (%s) %s.',
	'assert_empty'         => 'assert_empty: Attendait une valeur vide, mais obtenu (%s) %s.',
	'assert_not_empty'     => 'assert_not_empty: Attendait une valeur non vide, mais obtenu (%s) %s.',
	'assert_pattern'       => 'assert_pattern: Attendait que %s corresponde à %s.',
	'assert_not_pattern'   => 'assert_not_pattern: Attendait que %s ne corresponde pas à %s.',
);
